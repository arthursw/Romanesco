// Generated by CoffeeScript 1.7.1
(function() {
  var sqrtTwoPi;

  this.g = this;

  this.sign = function(x) {
    if (typeof x === "number") {
      if (x) {
        if (x < 0) {
          return -1;
        } else {
          return 1;
        }
      } else {
        if (x === x) {
          return 0;
        } else {
          return NaN;
        }
      }
    } else {
      return NaN;
    }
  };

  this.clamp = function(min, value, max) {
    return Math.min(Math.max(value, min), max);
  };

  Array.prototype.remove = function(itemToRemove) {
    var i, item, _i, _len;
    for (i = _i = 0, _len = this.length; _i < _len; i = ++_i) {
      item = this[i];
      if (item === itemToRemove) {
        this.splice(i, 1);
        break;
      }
    }
  };

  Array.prototype.first = function() {
    return this[0];
  };

  Array.prototype.last = function() {
    return this[this.length - 1];
  };

  Array.prototype.random = function() {
    return this[Math.floor(Math.random() * this.length)];
  };

  this.pushIfAbsent = function(array, item) {
    if (array.indexOf(item) < 0) {
      array.push(item);
    }
  };

  this.defferedExecution = function(callback, id, n) {
    if (n == null) {
      n = 500;
    }
    if (g.updateTimeout[id] != null) {
      clearTimeout(g.updateTimeout[id]);
    }
    return g.updateTimeout[id] = setTimeout(callback, n);
  };

  sqrtTwoPi = Math.sqrt(2 * Math.PI);

  this.gaussian = function(mean, sigma, x) {
    var expf;
    expf = -((x - mean) * (x - mean) / (2 * sigma * sigma));
    return (1.0 / (sigma * sqrtTwoPi)) * Math.exp(expf);
  };

}).call(this);

//# sourceMappingURL=utils.map
