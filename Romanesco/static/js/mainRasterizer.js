// Generated by CoffeeScript 1.7.1
(function() {
  var init, initPosition, initTools;

  initTools = function() {
    var pathClass, _i, _len;
    g.tools = {};
    for (_i = 0, _len = pathClasses.length; _i < _len; _i++) {
      pathClass = pathClasses[_i];
      g.tools[pathClass.rname] = {
        RPath: pathClass
      };
    }
  };

  initPosition = function() {
    var box, boxRectangle, boxString, br, loadEntireArea, planet, pos, tl;
    boxString = g.canvasJ.attr("data-box");
    if (!boxString || boxString.length === 0) {
      window.onhashchange();
      return;
    }
    box = JSON.parse(boxString);
    planet = new Point(box.planetX, box.planetY);
    tl = posOnPlanetToProject(box.box.coordinates[0][0], planet);
    br = posOnPlanetToProject(box.box.coordinates[0][2], planet);
    boxRectangle = new Rectangle(tl, br);
    pos = boxRectangle.center;
    g.RMoveTo(pos);
    loadEntireArea = g.canvasJ.attr("data-load-entire-area");
    if (loadEntireArea) {
      g.entireArea = boxRectangle;
      g.load(boxRectangle);
    }
  };

  paper.install(window);

  init = function() {
    g.romanescoURL = 'http://localhost:8000/';
    g.windowJ = $(window);
    g.stageJ = $("#stage");
    g.sidebarJ = $("#sidebar");
    g.canvasJ = g.stageJ.find("#canvas");
    g.canvas = g.canvasJ[0];
    g.context = g.canvas.getContext('2d');
    g.templatesJ = $("#templates");
    g.me = null;
    g.selectionLayer = null;
    g.polygonMode = false;
    g.selectionBlue = '#2fa1d6';
    g.updateTimeout = {};
    g.restrictedArea = null;
    g.currentPaths = {};
    g.loadingBarTimeout = null;
    g.entireArea = null;
    g.entireAreas = [];
    g.loadedAreas = [];
    g.paths = new Object();
    g.items = new Object();
    g.locks = [];
    g.divs = [];
    g.sortedPaths = [];
    g.sortedDivs = [];
    g.fastMode = false;
    g.fastModeOn = false;
    g.scale = 1000.0;
    g.rasters = {};
    g.catchErrors = false;
    g.limitPathV = null;
    g.limitPathH = null;
    g.defaultColors = [];
    g.gui = {
      __folders: {}
    };
    g.animatedItems = [];
    g.rasterizerMode = true;
    g.areaToRasterize = null;
    Dajaxice.setup({
      'default_exception_callback': function(error) {
        console.log('Dajaxice error!');
        romanesco_alert("Connection error", "error");
      }
    });
    g.itemListsJ = $();
    g.pathList = $();
    g.divList = $();
    paper.setup(canvas);
    Layer.project = "gogo";
    g.mainLayer = project.activeLayer;
    g.lockLayer = new Layer();
    g.debugLayer = new Layer();
    g.mainLayer.activate();
    g.grid = new Group();
    g.grid.name = 'grid group';
    view.zoom = 1;
    $.ajax({
      url: g.romanescoURL + "static/coffee/path.coffee"
    }).done(function(data) {
      var classMap, expression, expressions, lines, pathClass, _i, _j, _len, _len1, _ref, _ref1;
      lines = data.split(/\n/);
      expressions = CoffeeScript.nodes(data).expressions;
      classMap = {};
      _ref = g.pathClasses;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        pathClass = _ref[_i];
        classMap[pathClass.name] = pathClass;
      }
      for (_j = 0, _len1 = expressions.length; _j < _len1; _j++) {
        expression = expressions[_j];
        if ((_ref1 = classMap[expression.variable.base.value]) != null) {
          _ref1.source = lines.slice(expression.locationData.first_line, +expression.locationData.last_line + 1 || 9e9).join("\n");
        }
      }
    });
    initializeGlobalParameters();
    initTools();
  };

  $(document).ready(function() {
    init();
  });

  this.fakeFunction = function() {};

  this.updateRoom = this.fakeFunction;

  this.setControllerValueByName = this.fakeFunction;

  this.setControllerValue = this.fakeFunction;

  this.deferredExecution = this.fakeFunction;

  this.romanesco_alert = this.fakeFunction;

  jQuery.fn.mCustomScrollbar = this.fakeFunction;

}).call(this);

//# sourceMappingURL=mainRasterizer.map
